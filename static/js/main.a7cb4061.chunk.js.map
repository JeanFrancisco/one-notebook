{"version":3,"sources":["components/auth/constants/index.js","components/auth/reducers/index.js","redux/constants/typesNotes.js","helpers/arrays.js","redux/reducers/notesReducer.js","redux/constants/typesUi.js","redux/reducers/uiReducer.js","redux/Store.js","config/moment.js","helpers/files.js","config/firebase.js","redux/actions/notes.js","components/home/JournalEntry/JournalEntry.jsx","components/home/JournalList/JournalList.jsx","redux/actions/ui.js","components/auth/actions/index.js","components/home/Sidebar/Sidebar.jsx","components/home/Nothing/Nothing.jsx","components/home/NoteAppBar/NoteAppBar.jsx","hooks/useForm.js","images/83968430_104662571102161_9176297833785982976_n.jpg","components/home/Note/Note.jsx","components/home/Home.jsx","components/auth/Errors.jsx","components/auth/Login.jsx","components/auth/Register.jsx","routers/AuthRouter.jsx","components/custom/Loading.jsx","components/auth/routes/PrivateRoute.jsx","components/auth/routes/PublicBlockedRoute.jsx","routers/AppRouter.jsx","JournalApp.jsx","index.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_SET_ERROR","AUTH_REMOVE_ERROR","initialState","NOTES_NEW_NOTE","NOTES_DROP_NOTE","NOTES_SET_ACTIVE","NOTES_UPDATED_NOTE","NOTES_DISPLAY_IN_SIDEBAR","NOTES_CLEANING_WHEN_LOGOUT","NOTES_CHANGE_ORDER","compareFunction","firstElement","secondElement","order","notes","orderby","active","UI_START_LOADING","UI_FINISH_LOADING","loading","allReducers","combineReducers","ui","state","action","type","auth","uid","payload","name","displayName","errors","undefined","updated_note","map","note","id","filter","copy_notes","prop_criteria","sort","a","b","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","Store","createStore","applyMiddleware","thunk","moment","locale","uploadFile","file","formBody","FormData","append","fetch","method","body","resp","status","json","console","error","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","actionNewNote","createdNote","actionSetActiveNote","activeNote","actionSavingChanges","dispatch","getState","user_uid","note_id","noteForFirestore","updateDoc","doc","firestoreDB","then","refreshNote","Swal","fire","title","html","icon","timer","showConfirmButton","confirmButtonText","confirmButtonColor","catch","reason","log","code","updatedNote","getFirebaseNotes","getDocs","collection","snapNotes","forEach","snapHijo","push","data","displayNotes","deleteNote","noteID","JournalEntry","entry","urlImage","createdAt","momentCreatedDate","localMoment","useDispatch","className","onClick","style","backgroundImage","format","JournalList","items","useSelector","store","handleToggleOrderRule","e","orderBy","target","value","onChange","checked","htmlFor","actionStartLoading","actionFinishLoading","authLogin","authLogout","setAuthError","msg","removeAuthError","Sidebar","user","asyncAction","getAuth","signOut","newNote","Date","getTime","addDoc","data-fa-transform","Nothing","NoteAppBar","inputFile","useRef","display","uniqueFile","files","text","allowOutsideClick","willOpen","showLoading","secure_url","close","ref","current","click","useForm","initialFormValues","onSubmitFunction","useState","values","setValues","handleInputChanges","handleSubmit","preventDefault","resetForm","valuesReset","Note","thisNote","contentNote","formNotes","handleInputChange","initialNoteID","useEffect","imgUrl","defaultImageDemo","placeholder","src","alt","deleteDoc","showCloseButton","footer","Home","Errors","Login","email","password","validator","isEmpty","formValues","isEmail","isLength","min","signInWithEmailAndPassword","iconColor","finally","authEmailPasswordSignIn","handleFormSubmit","onSubmit","autoComplete","disabled","signInWithPopup","GoogleAuthProvider","userCredentials","iconHtml","to","Register","username","confirmpassword","createUserWithEmailAndPassword","updateProfile","authEmailPasswordSignUp","AuthRouter","path","component","overrideStyles","css","Loading","size","PrivateRoute","isAuthenticated","Component","redirectPath","rest","props","PublicBlockedRoute","AppRouter","firstAuthTry","isVerifying","setVerifying","setAuthenticated","appFirebase","onAuthStateChanged","timerProgressBar","result","exact","JournalApp","AppStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7cb4061.chunk.js","sourcesContent":["export const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_SET_ERROR = 'AUTH_ERROR';\nexport const AUTH_REMOVE_ERROR = 'AUTH_REMOVE_ERROR';\n\nconst AUTH_TYPES = {\n    AUTH_LOGIN,\n    AUTH_LOGOUT,\n    AUTH_SET_ERROR,\n    AUTH_REMOVE_ERROR,\n};\n\nexport default AUTH_TYPES;","import {\n    AUTH_LOGIN,\n    AUTH_LOGOUT,\n    AUTH_REMOVE_ERROR,\n    AUTH_SET_ERROR\n} from \"../constants\";\n\nconst initialState = {};\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        case AUTH_LOGIN:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName,\n            };\n\n        case AUTH_LOGOUT:\n            return {};\n\n        case AUTH_REMOVE_ERROR:\n            return {\n                ...state,\n                errors: undefined,\n            };\n\n        case AUTH_SET_ERROR:\n            return {\n                ...state,\n                errors: action.payload,\n            };\n        default: return state;\n    }\n}","export const NOTES_NEW_NOTE = '[NOTES] NEW_NOTE';\nexport const NOTES_DROP_NOTE = '[NOTES] DROP_NOTE';\nexport const NOTES_SET_ACTIVE = '[NOTES] SET_ACTIVE';\nexport const NOTES_UPDATED_NOTE = '[NOTES] UPDATED_NOTE';\nexport const NOTES_DISPLAY_IN_SIDEBAR = '[NOTES] DISPLAY_IN_SIDEBAR';\nexport const NOTES_CLEANING_WHEN_LOGOUT = '[NOTES] CLEANING_WHEN_LOGOUT';\n\nexport const NOTES_CHANGE_ORDER = '[NOTES] CHANGE_ORDER';\n\nconst TYPES_NOTES = {\n    NOTES_NEW_NOTE,\n    NOTES_DROP_NOTE,\n    NOTES_SET_ACTIVE,\n    NOTES_UPDATED_NOTE,\n    NOTES_DISPLAY_IN_SIDEBAR,\n    NOTES_CLEANING_WHEN_LOGOUT,\n    NOTES_CHANGE_ORDER,\n};\n\nexport default TYPES_NOTES;","export const compareFunction = (firstElement, secondElement, order = 'asc') => {\n    if( firstElement > secondElement )\n        return ( order === 'asc' ? 1 : -1 );\n\n    else if( firstElement < secondElement )\n        return ( order === 'asc' ? -1 : 1 );\n\n    else\n        return 0;\n}","import {\n    NOTES_NEW_NOTE,\n    NOTES_SET_ACTIVE,\n    NOTES_DISPLAY_IN_SIDEBAR,\n    NOTES_UPDATED_NOTE,\n    NOTES_DROP_NOTE,\n    NOTES_CLEANING_WHEN_LOGOUT,\n    NOTES_CHANGE_ORDER,\n} from '../constants/typesNotes';\nimport { compareFunction } from '../../helpers/arrays';\n\nconst initialState = {\n    notes: [],\n    order: 'asc',\n    orderby: 'cronologic',\n    active: null,\n}\n\nexport const notesReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case NOTES_NEW_NOTE:\n            return {\n                ...state,\n                notes: [\n                    action.payload,\n                    ...state.notes,\n                ],\n            }\n\n        case NOTES_SET_ACTIVE:\n            return {\n                ...state,\n                active: action.payload,\n            }\n\n        case NOTES_DISPLAY_IN_SIDEBAR:\n            return {\n                ...state,\n                notes: action.payload,\n            }\n\n        case NOTES_UPDATED_NOTE:\n            const updated_note = action.payload;\n\n            return {\n                ...state,\n                notes: state.notes.map( note => ( note.id === updated_note.id ? updated_note : note ) ),\n            }\n\n        case NOTES_DROP_NOTE:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => ( note.id !== action.payload ) ),\n            }\n\n        case NOTES_CLEANING_WHEN_LOGOUT:\n            return {\n                ...initialState,\n            }\n\n        case NOTES_CHANGE_ORDER:\n            let { order = state.order, orderby = state.orderby } = action.payload;\n\n            const copy_notes = [ ...state.notes ];\n\n            const prop_criteria = ( orderby === 'cronologic' ? 'createdAt' : 'title' );\n\n            return {\n                ...state,\n                orderby,\n                order,\n                notes: copy_notes.sort( (a, b) => compareFunction( a[prop_criteria], b[prop_criteria], order )),\n            }\n\n        default:\n            return state;\n    }\n}","export const UI_START_LOADING = '[UI] START_LOADING';\nexport const UI_FINISH_LOADING = '[UI] FINISH_LOADING';\n\nconst TYPES_UI = {\n    UI_START_LOADING,\n    UI_FINISH_LOADING,\n};\n\nexport default TYPES_UI;","import { UI_FINISH_LOADING, UI_START_LOADING } from '../constants/typesUi';\n\nconst initialState = { loading: false };\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case UI_START_LOADING:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case UI_FINISH_LOADING:\n            return {\n                ...state,\n                loading: false,\n            }\n\n        default:\n            return state;\n    }\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../components/auth/reducers\";\nimport { notesReducer } from \"./reducers/notesReducer\";\nimport { uiReducer } from \"./reducers/uiReducer\";\n\n\nconst allReducers = combineReducers({\n    ui: uiReducer,\n    auth: authReducer,\n    notes: notesReducer,\n});\n\n/* <---- FOR DEBUG ENVIRONMENT ONLY ----> */\nconst composeEnhancers = ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    trace: true,\n    traceLimit: 15\n}) ) || compose;\n\nconst Store = createStore(\n    allReducers,\n    composeEnhancers( applyMiddleware(thunk) ),\n);\n\nexport default Store;","import moment from 'moment';\nimport 'moment/locale/es';\n\nmoment().locale('es');\nexport default moment;","export const uploadFile = async (file) => {\n    const endpointAPI = 'https://api.cloudinary.com/v1_1/duik09roe341/upload';\n    const applicationName = 'uknhgwms-react-journal';\n \n    const formBody = new FormData();\n    formBody.append('file', file);\n    formBody.append('upload_preset', applicationName);\n\n    try {\n        const resp = await fetch(endpointAPI, {\n            method: 'POST',\n            body: formBody,\n        });\n\n        if(resp.status === 200)\n            return resp.json();\n        else\n            throw resp.json();\n\n    } catch (err) {\n        console.error('Failed to upload the file: ' + err);\n    }\n}","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING,\n    appId: process.env.REACT_APP_FIREBASE_APP,\n};\n\n// const firebaseConfigForTests = {\n//     apiKey: \"\",\n//     authDomain: \"\",\n//     projectId: \"\",\n//     storageBucket: \"\",\n//     messagingSenderId: \"\",\n//     appId: \"\",\n// }\n\n// if( process.env.NODE_ENV === 'test' )\n//     initializeApp(firebaseConfigForTests);\n// else\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore();\n\nexport {\n    app,\n    db,\n}","import Swal from 'sweetalert2';\nimport { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from '@firebase/firestore';\nimport {\n    NOTES_NEW_NOTE,\n    NOTES_SET_ACTIVE,\n    NOTES_DISPLAY_IN_SIDEBAR,\n    NOTES_UPDATED_NOTE,\n    NOTES_DROP_NOTE,\n    NOTES_CLEANING_WHEN_LOGOUT,\n    NOTES_CHANGE_ORDER,\n} from '../constants/typesNotes';\nimport { uploadFile } from '../../helpers/files';\nimport { db as firestoreDB } from '../../config/firebase';\n\nexport const actionAddNewNote = () => {\n    return async (dispatch, getState) => {\n        const { uid: user_uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            urlImage: '',\n            createdAt: new Date().getTime(),\n        };\n\n        const doc = await addDoc( collection(firestoreDB, `${user_uid}/journal/notes`), newNote);\n\n        const createdNote = {\n            id: doc.id,\n            ...newNote,\n        };\n\n        dispatch( actionNewNote( createdNote ) );\n        dispatch( actionSetActiveNote( createdNote ) );\n    }\n};\n\nexport const actionNewNote = ( createdNote ) => ({\n    type: NOTES_NEW_NOTE,\n    payload: createdNote,\n});\n\nexport const actionSetActiveNote = ( activeNote ) => ({\n    type: NOTES_SET_ACTIVE,\n    payload: activeNote,\n});\n\nexport const actionSavingChanges = () => {\n    return async (dispatch, getState) => {\n        const user_uid = getState().auth.uid;\n        const activeNote = getState().notes.active;\n\n        const { id: note_id, ...noteForFirestore } = activeNote;\n        await updateDoc( doc(firestoreDB, `${user_uid}/journal/notes/${ note_id }`), noteForFirestore )\n            .then(() => {\n                dispatch( refreshNote(activeNote) );\n\n                Swal.fire({\n                    title: 'Guardada exitosamente',\n                    html: '<p><small>Su nota se guardó correctamente</small></p>',\n                    icon: 'success',\n                    timer: 1300,\n                    showConfirmButton: true,\n                    confirmButtonText: 'Aceptar',\n                    confirmButtonColor: 'limegreen',\n                });\n            })\n            .catch(reason => {\n                console.log( reason.code );\n            });\n    }\n}\n\nexport const refreshNote = ( updatedNote ) => ({\n    type: NOTES_UPDATED_NOTE,\n    payload: { ...updatedNote },\n});\n\nexport const getFirebaseNotes = () => {\n    return async ( dispatch, getState ) => {\n        const { uid } = getState().auth;\n\n        const snapNotes = await getDocs( collection(firestoreDB, `${uid}/journal/notes`) );\n        const notes = [];\n\n        snapNotes.forEach( snapHijo => {\n            notes.push({\n                id: snapHijo.id,\n                ...snapHijo.data(),\n            })\n        });\n\n        dispatch( displayNotes(notes) );\n    }\n}\n\nexport const displayNotes = ( notes ) => ({\n    type: NOTES_DISPLAY_IN_SIDEBAR,\n    payload: notes,\n});\n\nexport const actionSetAscendingOrder = () => ({\n    type: NOTES_CHANGE_ORDER,\n    payload: {\n        order: 'asc',\n    }\n});\n\nexport const actionSetDescendingOrder = () => ({\n    type: NOTES_CHANGE_ORDER,\n    payload: {\n        order: 'desc',\n    }\n});\n\nexport const actionReorderByRule = ( orderBy ) => ({\n    type: NOTES_CHANGE_ORDER,\n    payload: {\n        orderby: orderBy,\n    }\n});\n\nexport const actionStartUploadFile = (file) => {\n    return async (dispatch, getState) => {\n \n        Swal.fire({\n            title: 'Subiendo archivos...',\n            text: 'Por favor, espere un momento...',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            },\n        });\n\n        const activeNote = getState().notes.active;\n        const { secure_url } = await uploadFile(file);\n\n        dispatch( actionSetActiveNote({ ...activeNote, urlImage: secure_url }) );\n        await dispatch( actionSavingChanges() );\n\n        Swal.close();\n    }\n}\n\nexport const actionStartDeletingNote = (note_id) => {\n    return async (dispatch, getState) => {\n        const user_uid = getState().auth.uid;\n\n        try {\n            /* const resp = */ await deleteDoc( doc( firestoreDB, `${user_uid}/journal/notes/${note_id}`) );\n\n            dispatch( deleteNote( note_id ) );\n\n            Swal.fire({\n                icon: 'success',\n                timer: 1250,\n                title: 'Eliminado',\n                text: 'Su nota fue eliminada',\n                confirmButtonText: 'Aceptar',\n                confirmButtonColor: 'green',\n                showCloseButton: true,\n            });\n\n        } catch (e) {\n            Swal.fire({\n                icon: 'error',\n                html: 'Error en la conexión con Firestore DB',\n                title: 'Error. <small>No pudimos terminar la eliminación</small>',\n                footer: `<small>For more details: ${e.code}</small>`,\n                confirmButtonText: 'Entendido',\n                confirmButtonColor: 'oragered', \n                showCloseButton: true,\n            });\n\n            console.error(e);\n        }\n    }\n}\n\nexport const deleteNote = (noteID) => ({\n    type: NOTES_DROP_NOTE,\n    payload: noteID\n});\n\nexport const cleanupNotesLogout = () => ({\n    type: NOTES_CLEANING_WHEN_LOGOUT\n});","import { useDispatch } from 'react-redux';\nimport localMoment from '../../../config/moment';\nimport { actionSetActiveNote } from '../../../redux/actions/notes';\n\nconst JournalEntry = ({ entry }) => {\n    const { urlImage, title, body, createdAt } = entry;\n\n    const momentCreatedDate = localMoment(createdAt);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        dispatch( actionSetActiveNote({ ...entry }) )\n    }\n\n    return <div className=\"journal__entry animate__animated animate__pulse\"\n            onClick={ handleEntryClick }\n        >\n        {\n            urlImage &&\n            <div className=\"journal__entry-image animate__animated animate__fadeIn animate__slow\" style={{\n                backgroundImage: `url(${ urlImage })`,\n            }}>\n            </div>\n        }\n\n        <div className=\"journal__entry-content\">\n            <h5 className=\"journal__entry-title\">{ title }</h5>\n            <p className=\"journal__entry-description\">\n                { body }\n            </p>\n        </div>\n\n        <label className=\"journal__entry-date\">\n            { momentCreatedDate.format('dddd') }\n            <span className=\"journal__entry-day\">\n                { momentCreatedDate.format('D') }\n            </span>\n        </label>\n    </div>\n}\n\nexport default JournalEntry;","import { useDispatch, useSelector } from \"react-redux\";\nimport JournalEntry from \"../JournalEntry/JournalEntry\";\nimport {\n    actionReorderByRule,\n    actionSetAscendingOrder,\n    actionSetDescendingOrder,\n} from \"../../../redux/actions/notes\";\n\nconst JournalList = () => {\n    const dispatch = useDispatch();\n    const items = useSelector( store => store.notes.notes );\n    const order = useSelector( store => store.notes.order );\n    const orderby = useSelector( store => store.notes.orderby );\n\n    const handleToggleOrderRule = e => {\n        dispatch( actionReorderByRule( e.target.value ) );\n    }\n\n    const handleToggleOrder = () => {\n\n        if( order === 'asc' ) {\n            dispatch( actionSetDescendingOrder() );\n\n            // document.getElementById('btn-sort-icon').setAttribute('class', 'fa fa-sort-amount-up');\n            /* Para estos casos. Ambas son malas implementaciones. Ya que se puede usar directamente en la propiedad className. */\n            // iconSortRef.current?.setAttribute('class', 'fa fa-sort-amount-up');\n        }\n        else {\n            dispatch( actionSetAscendingOrder() );\n\n            // document.getElementById('btn-sort-icon').setAttribute('class', 'fa fa-sort-amount-down-alt');\n            /* Ambas son malas implementaciones. Ya que se puede incluir directamente una condición en la prop className */\n            // iconSortRef.current?.setAttribute('class', 'fa fa-sort-amount-down-alt');\n        }\n    }\n\n    return <div className=\"journal__list\">\n\n        <div className=\"journal__list-order-form\">\n            <label className=\"journal__list-order-title\"> Order by: </label>\n\n            <input\n                type=\"radio\"\n                name=\"orderBy\"\n                value=\"alphabetic\"\n                onChange={ handleToggleOrderRule }\n                checked={ orderby === 'alphabetic' }\n                id=\"alphabetic\"/>\n            <label htmlFor=\"alphabetic\" >\n                Alphabetically</label>\n\n            <input\n                type=\"radio\"\n                name=\"orderBy\"\n                value=\"cronologic\"\n                onChange={ handleToggleOrderRule }\n                checked={ orderby === 'cronologic' }\n                id=\"cronologic\"/>\n            <label htmlFor=\"cronologic\" >\n                Cronologically</label>\n\n            <button className=\"btn\" onClick={ handleToggleOrder }>\n                <i id=\"btn-sort-icon\"\n                    className={ `fa fa-sort-amount-${\n                        (order === 'asc')\n                        ? 'down-alt'\n                        : 'up'\n                    }` }>\n                </i>\n            </button>\n        </div>\n\n        {   items.map( note => (\n                <JournalEntry key={ note.id } entry={ note } />\n            ))\n        }\n    </div>\n}\n\nexport default JournalList;","import { UI_FINISH_LOADING, UI_START_LOADING } from \"../constants/typesUi\";\n\nexport const actionStartLoading = () => ({\n    type: UI_START_LOADING,\n});\n\nexport const actionFinishLoading = () => ({\n    type: UI_FINISH_LOADING,\n});","import {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    GoogleAuthProvider,\n    signInWithPopup,\n    updateProfile,\n    getAuth,\n    signOut,\n} from \"firebase/auth\";\nimport Swal from 'sweetalert2';\nimport { app } from \"../../../config/firebase\";\nimport { cleanupNotesLogout } from \"../../../redux/actions/notes\";\nimport { actionFinishLoading, actionStartLoading } from \"../../../redux/actions/ui\";\nimport {\n    AUTH_LOGIN,\n    AUTH_LOGOUT,\n    AUTH_SET_ERROR,\n    AUTH_REMOVE_ERROR\n} from \"../constants\";\n\nexport const authLogin = (uid, displayName) => ({\n    type: AUTH_LOGIN,\n    payload: {\n        uid,\n        displayName,\n    }\n});\n\nexport const authSignInWithGoogle = () => {\n    return async (dispatch) => {\n\n        dispatch( actionStartLoading() );\n\n        const auth = getAuth( app );\n\n        await signInWithPopup( auth, new GoogleAuthProvider() )\n        .then( userCredentials => {\n            // const { user: { displayName, uid } } = userCredentials;\n            \n            // dispatch( authLogin(uid, displayName) );\n        })\n        .catch( reason => {\n            Swal.fire({\n                icon: 'warning',\n                html: '<small>No se pudo iniciar la sesión. <br/> <br/> ¿Alcanzó a ver si ocurrió algo: con el Pop-up de autenticación de Google?</small>',\n                title: 'Oups! Lo sentimos.',\n                iconHtml: '<i class=\"fa fa-warning\"></i>',\n                footer: `<small>Reason Code: ${reason.code}</small>`,\n                showCloseButton: true,\n                confirmButtonText: 'Aceptar',\n            });\n        })\n        .finally(() => {\n            dispatch( actionFinishLoading() );\n        });\n    };\n}\n\nexport const authEmailPasswordSignIn = ({ email, password }) => {\n    return async dispatch => {\n        dispatch( actionStartLoading() );\n\n        const auth = getAuth(app);\n\n        await signInWithEmailAndPassword(auth, email, password)\n            .then( ({ user }) => {\n                // const { uid, displayName } = user;\n\n                // dispatch( authLogin(uid, displayName) );\n            }).catch( reason => {\n                Swal.fire({\n                    title: 'Oups! <small>Algo ocurrió mientras iniciabamos tu sesión.</small>',\n                    html: `<p><b><small>¿Qué acciones puedes hacer?</small></b></p>\n                        <ul style=\"text-align: left\">\n                            <li><small>Puedes revisar por favor tu email y contraseña.</small></li>\n                            <li><small>También que te puedes conectar a Internet. En especial a los servicios de Google.</small></li>\n                        </ul>`,\n                    confirmButtonText: 'Entendido',\n                    icon: 'warning',\n                    iconColor: 'orange',\n                    showCloseButton: true,\n                    confirmButtonColor: 'orangered',\n                    footer: `<small>Reason Code: ${reason.code}</small>`,\n                })\n            }).finally(() => {\n                dispatch( actionFinishLoading() );\n            });\n    }\n}\n\nexport const authEmailPasswordSignUp = ({ email, password, username }) => {\n    return async (dispatch) => {\n        dispatch( actionStartLoading() );\n\n        const auth = getAuth(app);\n\n        await createUserWithEmailAndPassword(auth, email, password)\n            .then( async userCredentials => {\n\n                const { user } = userCredentials;\n                await updateProfile(user, { displayName: username });\n\n                // dispatch( authLogin(user.uid, user.displayName) );\n\n            }).catch( reason => {\n                Swal.fire({\n                    title: 'Oups! <small>Ahora mismo no podemos registrarte.</small>',\n                    html: '<p>Por favor... <br/> <small>Regresa más tarde y vuelve a intentarlo ;) .</small><p>',\n                    icon: 'info',\n                    iconColor: 'orange',\n                    confirmButtonText: 'Entiendo',\n                    confirmButtonColor: 'limegreen',\n                    showCloseButton: true,\n                    footer: `<small>Reason Code: ${reason.code}</small>`,\n                });\n            }).finally(() => {\n               dispatch( actionFinishLoading() );\n            });\n    }\n}\n\nexport const authFirebaseLogout = () => {\n    return async dispatch => {\n        const auth = getAuth(app);\n\n        await signOut(auth);\n\n        dispatch( authLogout() );\n\n        dispatch( cleanupNotesLogout() );\n    }\n}\n\nexport const authLogout = () => ({ type: AUTH_LOGOUT });\n\nexport const setAuthError = ( msg ) => ({\n    type: AUTH_SET_ERROR,\n    payload: msg\n});\n\nexport const removeAuthError = () => ({ type: AUTH_REMOVE_ERROR });","import { useDispatch, useSelector } from \"react-redux\";\nimport JournalList from \"../JournalList/JournalList\";\nimport { authFirebaseLogout } from \"../../auth/actions\";\nimport { actionAddNewNote } from \"../../../redux/actions/notes\";\n\nconst Sidebar = () => {\n    const dispatch = useDispatch();\n    const user = useSelector( store => store.auth );\n\n    const handleLogout = () => {\n        const asyncAction = authFirebaseLogout();\n        dispatch( asyncAction );\n    }\n\n    const handleClickNewEntry = () => {\n        const asyncAction = actionAddNewNote();\n        dispatch( asyncAction );\n    }\n\n    return <aside className=\"sidebar\">\n        <div className=\"sidebar__user-info\">\n            <i className=\"sidebar__user-icon far fa-moon\"></i>\n            <p className=\"sidebar__user-name\">\n                { user.name }\n            </p>\n\n            <button\n                className=\"btn sidebar__user-loggout\"\n                onClick={ handleLogout } >\n                Logout\n            </button>\n        </div>\n\n        <div className=\"sidebar__new-entry\">\n            <button\n                onClick={ handleClickNewEntry }\n                className=\"btn\">\n                <div className=\"sidebar__new-entry-icon fa-5x\">\n                    <i className=\"far fa-calendar\"></i>\n                    <i className=\"fas fa-plus\" data-fa-transform=\"shrink-8 left-9 down-5\"></i>\n                </div>\n                <span className=\"sidebar__new-entry-txt\">\n                    New Entry\n                </span>\n            </button>\n        </div>\n\n        <JournalList />\n    </aside>\n}\n\nexport default Sidebar;","const Nothing = () => (\n    <div className=\"nothing\">\n        <p className=\"nothing__content-text\">\n            ¡ Selecciona un elemento.\n            <br />\n            O crea una nueva entrada !\n        </p>\n        <i className=\"far fa-star fa-5x nothing__content-icon\"></i>\n    </div>\n);\n\nexport default Nothing;","import { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport localMoment from '../../../config/moment';\nimport { actionSavingChanges, actionStartUploadFile } from '../../../redux/actions/notes';\n\nconst NoteAppBar = () => {\n    const dispatch = useDispatch();\n    const activeNote = useSelector( store => store.notes.active );\n\n    const inputFile = useRef();\n\n    const handleSavingNote = () => {\n        dispatch( actionSavingChanges() );\n    }\n\n    const handleUploadClick = () => {\n        // document.getElementById('selector__file-photo').click(); // Trigger the click event listener..\n        inputFile.current.click();\n    }\n\n    const handleChangeSelectFile = e => {\n        const uniqueFile = e.target.files[0];\n\n        dispatch( actionStartUploadFile(uniqueFile) );\n    }\n\n    return <div className=\"note__appbar\">\n        <span className=\"note__appbar-date\">{ localMoment(activeNote?.createdAt).format('LLLA') }</span>\n        <input id=\"selector__file-photo\"\n            type='file'\n            style={{ display: 'none' }}\n            onChange={ handleChangeSelectFile }\n            ref={ inputFile }\n            />\n        <button className=\"btn btn-primary\"\n            onClick={ handleUploadClick } >\n            <span className=\"fas fa-cloud-upload-alt fa-sm\"> </span>\n            &nbsp;\n            Subir Imagen\n        </button>\n        <button className=\"btn btn-primary\"\n            onClick={ handleSavingNote }\n            >\n            <i className=\"fas far fa-save fa-sm\"></i>\n            &nbsp;\n            Guardar\n        </button>\n    </div>;\n};\n\nexport default NoteAppBar;","import { useState } from \"react\"\n\nexport const useForm = (initialFormValues = {}, onSubmitFunction = () => {} )=> {\n\n    const [ values, setValues ] = useState( initialFormValues );\n\n    const handleInputChanges = ({ target }) => {\n\n        const { name, value } = target;\n\n        setValues({\n            ...values,\n            [ name ]: value\n        });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        onSubmitFunction(e);\n    }\n\n    const resetForm = ( valuesReset = initialFormValues ) => {\n        setValues( valuesReset );\n    }\n\n    return [\n        values,\n        handleInputChanges,\n        handleSubmit,\n        resetForm,\n    ]\n}","export default __webpack_public_path__ + \"static/media/83968430_104662571102161_9176297833785982976_n.19fe8a86.jpg\";","import PropTypes from 'prop-types';\nimport NoteAppBar from '../NoteAppBar/NoteAppBar';\nimport { useForm } from '../../../hooks/useForm';\nimport { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionSetActiveNote, actionStartDeletingNote } from '../../../redux/actions/notes';\nimport defaultImageDemo from '../../../images/83968430_104662571102161_9176297833785982976_n.jpg';\n\nconst Note = ({ contentNote: thisNote }) => {\n\n    const dispatch = useDispatch();\n\n    const [formNotes, handleInputChange, , resetForm ] = useForm(thisNote);\n\n    /**\n     * \n     console.log( thisNote ); // thisNote sí cambia. Pero formNotes no lo hace, porque el hook useForm no se vuelve a reiniciar.\n     console.log( formNotes );  // ¡ Reported Bug... formNotes: Mantiene el estado inicial de la primera vez que se renderizó el componente.\n\n     Para solucionar este problema.\n     Nosotros reseteamos el formulario, con la función de reset del useForm hook.\n     Pero sin crear un ciclo infinito, ya que podría producirse al hacer dependencias con\n     el hook useEffect(() => {}, [ thisNote ]); ó también, tal como se probó:\n     No se actualize porque siempre toma el valor inicial de la thisNote, sin actualizar los cambios en \n     el formValues o en el state interno del hook useForm(). Para solucionar esto último agregamos el useRef() hook.\n    */\n\n    const initialNoteID = useRef( thisNote.id );\n\n    useEffect(() => {\n\n        if( thisNote.id !== initialNoteID.current ) {\n            resetForm( thisNote );\n            initialNoteID.current = thisNote.id;\n        }\n\n    }, [thisNote, resetForm]);\n\n    // El useRef() + useEffect() anteriores, cumplen la misma función que el siguiente IF:\n    // if(thisNote.id !== formNotes.id ) {\n    //     resetForm( thisNote );\n    // }\n\n    useEffect(() => {\n\n        dispatch( actionSetActiveNote(formNotes) );\n\n    }, [formNotes, dispatch]);\n\n    const imgUrl = thisNote.urlImage || defaultImageDemo;\n\n    const handleDeleteNote = () => {\n        dispatch( actionStartDeletingNote(thisNote.id) );\n    }\n\n    return <div className=\"note\">\n        <NoteAppBar />\n\n        <form className=\"note__form\">\n            <input\n                type=\"text\"\n                name=\"title\"\n                value={ formNotes.title }\n                onChange={ handleInputChange }\n                placeholder=\"Type an awesome title\"\n                className=\"note__input-title animate__animated animate__slideInUp animate__slow\"\n                />\n\n            <textarea\n                name=\"body\"\n                value={ formNotes.body }\n                onChange={ handleInputChange }\n                placeholder=\"Empty\"\n                className=\"note__textarea animate__animated animate__fadeIn animate__slow\"\n                ></textarea>\n        </form>\n\n        <div className=\"note__footer\">\n            <img\n                src={ imgUrl }\n                alt=\"[note-img-preview]\"\n                className=\"note__image-preview animate__animated animate__fadeIn\" />\n\n            <button className=\"btn note__button-delete\"\n                onClick={ handleDeleteNote }\n                >\n                <span className=\"fas fa-trash-alt fa-sm\"></span> &nbsp;\n                Eliminar Nota</button>\n        </div>\n    </div>\n}\n\nNote.propTypes = {\n    contentNote: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        body: PropTypes.string.isRequired,\n        createdAt: PropTypes.number.isRequired,\n    }).isRequired\n};\n\nexport default Note;","import { useSelector } from \"react-redux\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Nothing from \"./Nothing/Nothing\";\nimport Note from \"./Note/Note\";\n\nconst Home = () => {\n    const activeNote = useSelector( store => store.notes.active );\n\n    return <>\n        <Sidebar />\n\n        <div className=\"home__main-content\">\n            {   (activeNote)\n                ? <Note contentNote={ activeNote } />\n                : <Nothing />\n            }\n        </div>\n    </>\n}\n\nexport default Home;","const Errors = ({ errors }) => (\n    ( errors !== undefined ) && <>\n        <label className=\"auth__errors\">\n            { errors }\n        </label>\n    </>\n);\n\nexport default Errors;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validator from 'validator';\nimport Errors from './Errors';\nimport { useForm } from '../../hooks/useForm';\nimport { authSignInWithGoogle, authEmailPasswordSignIn, removeAuthError, setAuthError } from './actions';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const { errors } = useSelector( store => store.auth );\n    const { loading } = useSelector( store => store.ui );\n\n    // useEffect(() => {\n    //     dispatch( removeAuthError() );\n    // }, [ dispatch ]);\n\n    const isFormValid = () => {\n        if( validator.isEmpty( formValues.email, ) || validator.isEmpty( formValues.password ) ) {\n            dispatch( setAuthError('Por favor, asegúrese de ingresar todos los campos.'))\n            return false;\n        }\n\n        if( ! validator.isEmail( formValues.email ) ) {\n            dispatch( setAuthError('Por favor asegúrese que su email es correcto, el valor ingresado no es válido.') );\n            return false;\n        }\n\n        if( ! validator.isLength( formValues.password, { min: 6 } )) {\n            dispatch( setAuthError('La contraseña es incorrecta, como mínimo debe tener una longitud de 6 caracteres.') );\n            return false;\n        }\n\n        if( errors !== undefined )\n            dispatch( removeAuthError() );\n\n        return true;\n    }\n\n    const onSubmit = () => {\n        if( isFormValid() ) {\n            const action = authEmailPasswordSignIn( formValues );\n            dispatch( action );\n        }\n    }\n\n    const [ formValues, handleInputChanges, handleFormSubmit ] = useForm({\n        email: '',\n        password: ''\n    }, onSubmit)\n\n    const handleSignInWithGoogle = e => {\n        const asyncAction = authSignInWithGoogle();\n        dispatch( asyncAction );\n    }\n\n    return <>\n        <h4 className=\"auth__title\">Iniciar Sesión</h4>\n\n        <Errors errors={ errors } />\n\n        <form onSubmit={ handleFormSubmit }>\n            <input\n                type=\"email\"\n                name=\"email\"\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                value={ formValues.email }\n                onChange={ handleInputChanges }\n                placeholder=\"Ingresa aquí tu e-mail.\"/>\n\n            <input\n                type=\"password\"\n                name=\"password\"\n                className=\"auth__input\"\n                value={ formValues.password }\n                onChange={ handleInputChanges }\n                placeholder=\"Escribe aquí tu contraseña.\"\n                />\n\n            <button\n                className=\"btn btn-primary btn-block auth__button\"\n                disabled={ loading }\n                type=\"submit\">\n                    Ingresar\n            </button>\n\n            <div className=\"auth__social-networks\">\n                <p>Iniciar sesión con redes sociales:</p>\n\n                <div\n                    onClick={ handleSignInWithGoogle }\n                    disabled={ loading }\n                    className=\"auth__google-btn\">\n                    <div className=\"auth__google-icon-wrapper\">\n                        <img\n                            className=\"auth__google-icon\"\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                            alt=\"[google logo]\" />\n                    </div>\n                    <div className=\"auth__google-btn-text\">\n                        <b>Sign in with google</b>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n        <Link\n            className=\"link\"\n            to=\"/auth/register\">\n            Crear una cuenta nueva.\n        </Link>\n    </>;\n}\n\nexport default Login;","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport Errors from './Errors';\nimport { useForm } from '../../hooks/useForm';\nimport { authEmailPasswordSignUp, removeAuthError, setAuthError } from './actions';\nimport { useEffect } from 'react';\n\nconst Register = () => {\n\n    const dispatch = useDispatch();\n    const { errors } = useSelector( state => state.auth );\n\n    useEffect(() => {\n        dispatch( removeAuthError() );\n    }, [ dispatch ]);\n\n    const isFormValid = () => {\n\n        if( validator.isEmpty(formValues.username) ) {\n            dispatch( setAuthError('Su nombre de usuario no puede ser un valor vacío') );\n            return false;\n        }\n\n        if( ! validator.isEmail(formValues.email) ) {\n            dispatch( setAuthError('El email no es válido') );\n            return false;\n        }\n\n        if( ! validator.isLength(formValues.password, { min: 6 } ) || formValues.password !== formValues.confirmpassword ) {\n            dispatch( setAuthError(`Revise su contraseña. Recuerde que no puede tener menos de 6 carácteres y\n            debe coincidir con la confirmación de password`) );\n            return false;\n        }\n\n        if( errors !== undefined )\n            dispatch( removeAuthError() );\n\n        return true;\n    }\n\n    const onSubmit = () => {\n        if( isFormValid() )\n            dispatch( authEmailPasswordSignUp(formValues) );\n    };\n\n    const [ formValues, handleInputChange, handleSubmit ] = useForm({\n        username: 'Francisco',\n        email: 'username@example.org',\n        password: '122345',\n        confirmpassword: '398174',\n    }, onSubmit );\n\n    return <>\n        <h4 className=\"auth__title\">Registrar</h4>\n\n        <Errors errors={ errors } />\n\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                name=\"username\"\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                placeholder=\"Enter your username\"\n                onChange={ handleInputChange }\n                value={ formValues.username }\n                />\n\n            <input\n                type=\"email\"\n                name=\"email\"\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                placeholder=\"Enter your e-mail\"\n                onChange={ handleInputChange }\n                value={ formValues.email }\n                />\n\n            <input\n                type=\"password\"\n                name=\"password\"\n                className=\"auth__input\"\n                placeholder=\"Type your password\"\n                onChange={ handleInputChange }\n                value={ formValues.password }\n                />\n\n            <input\n                type=\"password\"\n                name=\"confirmpassword\"\n                className=\"auth__input\"\n                placeholder=\"Please confirm your password\"\n                onChange={ handleInputChange }\n                value={ formValues.confirmpassword }\n                />\n\n            <button\n                className=\"btn btn-primary btn-block auth__button\"\n                type=\"submit\">\n                    Registrarme\n            </button>\n        </form>\n\n        <Link\n            className=\"link\"\n            to=\"/auth/login\">\n            ¿Ya estás registrado? Inicia Sesión.\n        </Link>\n    </>\n}\n\nexport default Register;","import { Redirect, Route, Switch } from 'react-router-dom';\nimport Login from '../components/auth/Login';\nimport Register from '../components/auth/Register';\n\nconst AuthRouter = () => {\n    \n    return <div className=\"auth__main\">\n        <div className=\"auth__box-container\">\n            <Switch>\n                <Route path=\"/auth/login\" component={ Login }/>\n                <Route path=\"/auth/register\" component={ Register }/>\n\n                <Redirect to=\"/auth/login\" />\n            </Switch>\n        </div>\n    </div>;\n};\n\nexport default AuthRouter;","import { css } from '@emotion/react';\nimport { BounceLoader } from 'react-spinners';\n\nconst overrideStyles = css`\n    margin: auto;\n`;\n\nconst Loading = () => (\n    <div className=\"loading__container\">\n        <BounceLoader size={ 300 } css={ overrideStyles }/>\n    </div>\n);\n\nexport default Loading;","import { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ isAuthenticated, component: Component, redirectPath, ...rest }) => {\n\n    return <Route { ...rest } component={ props => (\n                ( isAuthenticated ) ?\n                    <Component { ...props } />\n                :   <Redirect to={ redirectPath } />\n            )} />\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    redirectPath: PropTypes.string.isRequired,\n    component: PropTypes.func.isRequired,\n}\n\nexport default PrivateRoute;","import { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PublicBlockedRoute = ({ isAuthenticated, component: Component, redirectPath, ...rest }) => {\n\n    return <Route { ...rest } component={ props => (\n                ( !isAuthenticated ) ?\n                    <Component { ...props } />\n                :   <Redirect to={ redirectPath } />\n            )} />\n}\n\nPublicBlockedRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    redirectPath: PropTypes.string.isRequired,\n    component: PropTypes.func.isRequired,\n}\n\nexport default PublicBlockedRoute;","import { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport Home from '../components/home/Home';\nimport AuthRouter from './AuthRouter';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport Loading from '../components/custom/Loading';\nimport PrivateRoute from '../components/auth/routes/PrivateRoute';\nimport PublicBlockedRoute from '../components/auth/routes/PublicBlockedRoute';\nimport { authLogin } from '../components/auth/actions';\nimport { getFirebaseNotes } from '../redux/actions/notes';\nimport { app as appFirebase } from '../config/firebase';\nimport Swal from 'sweetalert2';\n\nconst AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const firstAuthTry = useRef(true);\n    const [ isVerifying, setVerifying ] = useState( true );\n    const [ isAuthenticated, setAuthenticated ] = useState( false );\n\n    useEffect(() => {\n        const auth = getAuth( appFirebase );\n\n        onAuthStateChanged(auth, ( user ) => {            \n\n            if( firstAuthTry.current && user?.uid ) {\n\n                dispatch( authLogin( user.uid, user.displayName ) );\n                setAuthenticated( true );\n                dispatch( getFirebaseNotes() );\n\n            } else if( user?.uid ) {\n\n                Swal.fire({\n                    title: 'Bienvenido!',\n                    text: 'Inicio de sesión éxitoso',\n                    timer: 1500,\n                    timerProgressBar: true,\n                    showConfirmButton: true,\n                    confirmButtonText: 'Aceptar',\n                    icon: 'success',\n                }).then( result => {\n\n                    dispatch( authLogin( user.uid, user.displayName ) );\n                    setAuthenticated( true );\n                    dispatch( getFirebaseNotes() );\n\n                });\n\n            } else {\n                firstAuthTry.current = false;\n\n                setAuthenticated( false );\n            }\n\n            setVerifying( false );\n\n        }, error => {\n\n            Swal.fire({\n                title: 'Oups! <small>Tuvimos algunos problemas para recuperar tu sesión.<small>',\n                text: 'Nos ayudarías si revisas tu conexión a internet. E intenta recargar la página nuevamente, por favor.',\n                confirmButtonText: 'Aceptar',\n                showCloseButton: true,\n                icon: 'info',\n                timer: 1500,\n            });\n        });\n    }, [ dispatch ]);\n\n    if( isVerifying ) {\n        return <Loading />;\n    }\n\n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute exact path=\"/\" isAuthenticated={ isAuthenticated } redirectPath='/auth/login' component={ Home } />\n                <PublicBlockedRoute path=\"/auth\" isAuthenticated={ isAuthenticated } redirectPath='/' component={ AuthRouter } />\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AppStore from './redux/Store';\nimport AppRouter from './routers/AppRouter';\n\nconst JournalApp = () => {\n\n    return <Provider store={ AppStore }>\n        <AppRouter />\n    </Provider>;\n}\n\nexport default JournalApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './styles/bootstrap.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}